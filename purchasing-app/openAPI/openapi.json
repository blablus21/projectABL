{
    "openapi": "3.0.3",
    "info": {
      "title": "Purchasing Service API",
      "version": "1.0.0"
    },
    "paths": {
      "/vendors": {
      "get": {
        "summary": "Get list of vendors",
        "description": "Retrieve a list of all vendors.",
        "responses": {
          "200": {
            "description": "List of vendors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Vendor"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "summary": "Add a new vendor",
        "description": "Create a new vendor entry.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewVendor"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Vendor created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/vendors/{id}": {
      "put": {
        "summary": "Update vendor details",
        "description": "Modify an existing vendor's details.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the vendor to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateVendor"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Vendor updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Vendor not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "summary": "Delete a vendor",
        "description": "Remove a vendor from the system.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the vendor to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Vendor deleted successfully"
          },
          "404": {
            "description": "Vendor not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
      "/purchase-requests": {
      "get": {
        "summary": "Get all purchase requests",
        "description": "Retrieve a list of all purchase requests.",
        "responses": {
          "200": {
            "description": "List of purchase requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchaseRequest"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "summary": "Create a new purchase request",
        "description": "Add a new purchase request to the system.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPurchaseRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Purchase request created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseRequestResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/purchase-requests/{id}": {
      "get": {
        "summary": "Get a purchase request by ID",
        "description": "Retrieve details of a specific purchase request.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the purchase request to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "Purchase request details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseRequest"
                }
              }
            }
          },
          "404": {
            "description": "Purchase request not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "summary": "Update a purchase request",
        "description": "Modify details of an existing purchase request.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the purchase request to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePurchaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Purchase request updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseRequestResponse"
                }
              }
            }
          },
          "404": {
            "description": "Purchase request not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "summary": "Delete a purchase request",
        "description": "Remove a purchase request from the system.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the purchase request to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Purchase request deleted successfully"
          },
          "404": {
            "description": "Purchase request not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/purchase-approvals": {
      "get": {
        "summary": "Get pending purchase approvals",
        "description": "Retrieve a list of purchase requests that are waiting for approval.",
        "responses": {
          "200": {
            "description": "List of pending purchase requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchaseRequest"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/purchase-approvals/{id}": {
      "post": {
        "summary": "Approve a purchase request",
        "description": "Approve a specific purchase request by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the purchase request to approve"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "approver": {
                    "type": "string",
                    "example": "John Doe"
                  },
                  "remarks": {
                    "type": "string",
                    "example": "Approved for immediate processing"
                  }
                },
                "required": ["approver"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Purchase request approved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Purchase request approved successfully"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "approver": {
                      "type": "string",
                      "example": "John Doe"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Purchase request not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
      "/quality-checks": {
        "post": {
          "summary": "Check quality of goods",
          "responses": {
            "200": {
              "description": "Quality check completed"
            }
          }
        }
      },
      "/inventory": {
      "get": {
        "summary": "Get inventory data",
        "description": "Retrieve a list of inventory items from the warehouse.",
        "responses": {
          "200": {
            "description": "List of inventory items",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InventoryItem"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "summary": "Update received item status",
        "description": "Add or update the status of an inventory item that has been received.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewInventoryItem"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Inventory item updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/payments": {
      "get": {
        "summary": "Get payment status",
        "description": "Retrieve the status of payments made to vendors.",
        "responses": {
          "200": {
            "description": "List of payment statuses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Payment"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "summary": "Send payment data to Finance",
        "description": "Submit payment data to the Finance division.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPayment"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Payment data sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
      "/vendor-payments": {
        "post": {
          "summary": "Process vendor payment",
          "responses": {
            "200": {
              "description": "Payment processed"
            }
          }
        }
      },
      "/shipments": {
        "get": {
          "summary": "Track shipment status",
          "description": "Retrieve the status of shipments.",
          "responses": {
            "200": {
              "description": "List of shipment statuses",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Shipment"
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      },
      
      "/purchase-reports": {
      "get": {
        "summary": "Generate purchase reports",
        "description": "Retrieve a report of all purchase requests, including details such as item name, quantity, status, and approver.",
        "responses": {
          "200": {
            "description": "Purchase report generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Purchase report generated successfully"
                    },
                    "report": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PurchaseRequestReport"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No purchase requests found for the report",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No purchase requests found for the report"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Server error"
                    },
                    "error": {
                      "type": "string",
                      "example": "Database connection error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/finance/budget": {
      "get": {
        "summary": "Get budget data",
        "responses": {
          "200": {
            "description": "Budget data retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Budget" }
                }
              }
            }
          },
          "500": { "description": "Server error" }
        }
      }
    },
    "/finance/payment-status": {
      "get": {
        "summary": "Get payment status",
        "responses": {
          "200": {
            "description": "Payment status retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Payment" }
                }
              }
            }
          },
          "500": { "description": "Server error" }
        }
      }
    },
    "/sales/item-requests": {
      "get": {
        "summary": "Get item requests",
        "responses": {
          "200": {
            "description": "Item requests retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/ItemRequest" }
                }
              }
            }
          },
          "500": { "description": "Server error" }
        }
      }
    },
    "/warehouse/inventory": {
      "get": {
        "summary": "Get inventory data",
        "responses": {
          "200": {
            "description": "Inventory data retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Inventory" }
                }
              }
            }
          },
          "500": { "description": "Server error" }
        }
      }
    },
    "/warehouse/storage-capacity": {
      "get": {
        "summary": "Get storage capacity data",
        "responses": {
          "200": {
            "description": "Storage capacity data retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/StorageCapacity" }
                }
              }
            }
          },
          "500": { "description": "Server error" }
        }
      }
    },
    "/warehouse/item-status": {
      "get": {
        "summary": "Get item status data",
        "responses": {
          "200": {
            "description": "Item status data retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/ItemStatus" }
                }
              }
            }
          },
          "500": { "description": "Server error" }
        }
      }
    }
    },
    "components": {
      "schemas": {
          "Vendor": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "example": 1
            },
            "name": {
              "type": "string",
              "example": "ABC Supplies"
            },
            "contact": {
              "type": "string",
              "example": "abc@supplies.com"
            },
            "phone": {
              "type": "string",
              "example": "+1234567890"
            }
          }
        },
        "NewVendor": {
          "type": "object",
          "required": ["name", "contact", "phone"],
          "properties": {
            "name": {
              "type": "string",
              "example": "ABC Supplies"
            },
            "contact": {
              "type": "string",
              "example": "abc@supplies.com"
            },
            "phone": {
              "type": "string",
              "example": "+1234567890"
            }
          }
        },
        "UpdateVendor": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "ABC Supplies Updated"
            },
            "contact": {
              "type": "string",
              "example": "newcontact@supplies.com"
            },
            "phone": {
              "type": "string",
              "example": "+9876543210"
            }
          }
        },
        "VendorResponse": {
          "type": "object",
          "properties": {
            "message": {
              "type": "string",
              "example": "Vendor operation successful"
            },
            "vendor": {
              "$ref": "#/components/schemas/Vendor"
            }
          }
        },
        "PurchaseRequest": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "example": 1
            },
            "item_name": {
              "type": "string",
              "example": "Laptop"
            },
            "quantity": {
              "type": "integer",
              "example": 10
            },
            "status": {
              "type": "string",
              "example": "Pending"
            }
          }
        },
        "NewPurchaseRequest": {
          "type": "object",
          "required": ["item_name", "quantity", "status"],
          "properties": {
            "item_name": {
              "type": "string",
              "example": "Laptop"
            },
            "quantity": {
              "type": "integer",
              "example": 10
            },
            "status": {
              "type": "string",
              "example": "Pending"
            }
          }
        },
        "UpdatePurchaseRequest": {
          "type": "object",
          "properties": {
            "item_name": {
              "type": "string",
              "example": "Laptop"
            },
            "quantity": {
              "type": "integer",
              "example": 15
            },
            "status": {
              "type": "string",
              "example": "Approved"
            }
          }
        },
        "PurchaseRequestResponse": {
          "type": "object",
          "properties": {
            "message": {
              "type": "string",
              "example": "Purchase request created successfully"
            },
            "id": {
              "type": "integer",
              "example": 1
            }
          }
        },
        "ApprovalRequest": {
          "type": "object",
          "properties": {
            "approver": {
              "type": "string",
              "example": "John Doe"
            },
            "remarks": {
              "type": "string",
              "example": "Approved for immediate processing"
            }
          },
          "required": ["approver"]
        },
        "ApprovalResponse": {
          "type": "object",
          "properties": {
            "message": {
              "type": "string",
              "example": "Purchase request approved successfully"
            },
            "id": {
              "type": "integer",
              "example": 1
            },
            "approver": {
              "type": "string",
              "example": "John Doe"
            }
          }
        },
        "PurchaseRequestReport": {
        "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "example": 1
            },
            "item_name": {
              "type": "string",
              "example": "Laptop"
            },
            "quantity": {
              "type": "integer",
              "example": 10
            },
            "status": {
              "type": "string",
              "example": "Approved"
            },
            "approver": {
              "type": "string",
              "example": "John Doe"
            },
            "remarks": {
              "type": "string",
              "example": "Urgent requirement"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "example": "2024-12-15T10:00:00Z"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "example": "2024-12-15T12:00:00Z"
            }
          }
        },
        "InventoryItem": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "example": 1
            },
            "item_name": {
              "type": "string",
              "example": "Laptop"
            },
            "quantity": {
              "type": "integer",
              "example": 50
            },
            "status": {
              "type": "string",
              "example": "Available"
            }
          }
        },
        "NewInventoryItem": {
          "type": "object",
          "required": ["item_name", "quantity", "status"],
          "properties": {
            "item_name": {
              "type": "string",
              "example": "Laptop"
            },
            "quantity": {
              "type": "integer",
              "example": 10
            },
            "status": {
              "type": "string",
              "example": "Received"
            }
          }
        },
        "InventoryResponse": {
          "type": "object",
          "properties": {
            "message": {
              "type": "string",
              "example": "Inventory item updated successfully"
            },
            "id": {
              "type": "integer",
              "example": 1
            }
          }
        },
        "Payment": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "example": 1
            },
            "vendor_id": {
              "type": "integer",
              "example": 5
            },
            "amount": {
              "type": "number",
              "example": 15000.50
            },
            "payment_date": {
              "type": "string",
              "format": "date",
              "example": "2024-12-01"
            },
            "status": {
              "type": "string",
              "example": "Completed"
            }
          }
        },
        "NewPayment": {
          "type": "object",
          "required": ["vendor_id", "amount", "payment_date", "status"],
          "properties": {
            "vendor_id": {
              "type": "integer",
              "example": 5
            },
            "amount": {
              "type": "number",
              "example": 15000.50
            },
            "payment_date": {
              "type": "string",
              "format": "date",
              "example": "2024-12-01"
            },
            "status": {
              "type": "string",
              "example": "Pending"
            }
          }
        },
        "PaymentResponse": {
          "type": "object",
          "properties": {
            "message": {
              "type": "string",
              "example": "Payment data sent successfully"
            },
            "id": {
              "type": "integer",
              "example": 1
            }
          }
        },
        "Shipment": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "example": 1
            },
            "tracking_number": {
              "type": "string",
              "example": "TRK123456789"
            },
            "status": {
              "type": "string",
              "example": "In Transit"
            },
            "estimated_delivery_date": {
              "type": "string",
              "format": "date",
              "example": "2024-12-30"
            },
            "carrier": {
              "type": "string",
              "example": "DHL"
            }
          }
        },
        "Budget": {
            "type": "object",
            "properties": {
              "id": { "type": "integer" },
              "amount": { "type": "number" },
              "allocated_to": { "type": "string" }
            }
        },
        "ItemRequest": {
          "type": "object",
          "properties": {
            "id": { "type": "integer" },
            "item_name": { "type": "string" },
            "quantity": { "type": "integer" },
            "requested_by": { "type": "string" }
          }
        },
        "Inventory": {
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "item_name": { "type": "string" },
          "quantity": { "type": "integer" }
        }
      },
      "StorageCapacity": {
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "capacity": { "type": "integer" },
          "used": { "type": "integer" }
        }
      },
      "ItemStatus": {
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "item_name": { "type": "string" },
          "status": { "type": "string" }
        }
      }
      }
    }
  
    }
